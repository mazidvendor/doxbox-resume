version: '3.8'

services:
  # Database (Postgres)
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Storage (Minio)
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

  # Chrome (Browserless)
  chrome:
    image: ghcr.io/browserless/chromium:latest
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      HEALTH: "true"
      TOKEN: chrome_token
      PROXY_HOST: "chrome"
      PROXY_PORT: 3000
      PROXY_SSL: "false"

  # App (Local build)
  app:
    build:
      context: .           # Root of your project
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - minio
      - chrome
    environment:
      PORT: 3000
      NODE_ENV: production

      PUBLIC_URL: http://localhost:3000
      STORAGE_URL: http://localhost:9000/default

      CHROME_TOKEN: chrome_token
      CHROME_URL: ws://chrome:3000

      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres

      ACCESS_TOKEN_SECRET: e53cc6f4999c081f7b6685c0b3c7962c
      REFRESH_TOKEN_SECRET: 3e31ef1f89bd350019b7731019242fd5

      MAIL_FROM: noreply@localhost

      STORAGE_ENDPOINT: minio
      STORAGE_PORT: 9000
      STORAGE_REGION: us-east-1
      STORAGE_BUCKET: default
      STORAGE_ACCESS_KEY: minioadmin
      STORAGE_SECRET_KEY: minioadmin
      STORAGE_USE_SSL: "false"
      STORAGE_SKIP_BUCKET_CHECK: "false"

volumes:
  minio_data:
  postgres_data:
